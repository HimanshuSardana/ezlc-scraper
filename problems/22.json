{"link": "https://leetcode.com/problems/generate-parentheses", "questionId": "22", "questionFrontendId": "22", "questionTitle": "Generate Parentheses", "titleSlug": "generate-parentheses", "difficulty": "Medium", "isPaidOnly": false, "question": "<p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n", "exampleTestcases": "3\n1", "topicTags": [{"name": "String", "slug": "string", "translatedName": null}, {"name": "Dynamic Programming", "slug": "dynamic-programming", "translatedName": null}, {"name": "Backtracking", "slug": "backtracking", "translatedName": null}], "hints": [], "solution": {"id": "1870", "canSeeDetail": false, "paidOnly": true, "hasVideoSolution": true, "paidOnlyVideo": true}, "companyTagStats": null, "likes": 21968, "dislikes": 1020, "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check if a Parentheses String Can Be Valid\", \"titleSlug\": \"check-if-a-parentheses-string-can-be-valid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]"}